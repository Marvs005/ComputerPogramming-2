import java.time.LocalDate;


interface LeaveApplication {
    void applyLeave(int days);
    int calculateLeaveBalance();
}

class Employee implements LeaveApplication {
    private String name;
    private LocalDate hireDate;
    private int annualLeaveBalance;

    public Employee(String name, LocalDate hireDate, int annualLeaveBalance) {
        this.name = name;
        this.hireDate = hireDate;
        this.annualLeaveBalance = annualLeaveBalance;
    }

    public String getName() {
        return name;
    }

    public LocalDate getHireDate() {
        return hireDate;
    }

    public int getAnnualLeaveBalance() {
        return annualLeaveBalance;
    }

  
    public void applyLeave(int days) {
        if (days <= annualLeaveBalance) {
            annualLeaveBalance -= days;
            System.out.println("Leave application approved for " + days + " days.");
        } else {
            System.out.println("Insufficient leave balance.");
        }
    }

   
    public int calculateLeaveBalance() {
        LocalDate currentDate = LocalDate.now();
        long monthsWorked = java.time.temporal.ChronoUnit.MONTHS.between(hireDate, currentDate);
        int earnedLeave = (int) (monthsWorked / 12) * 0; 
        return annualLeaveBalance + earnedLeave;
    }
}

public class LeaveApplication{
    public static void main(String[] args) {
        LocalDate hireDate = LocalDate.of(2023, 1, 1);
        LeaveApplication employee = new Employee("Employee Name", hireDate, 10);
        System.out.println("Employee: " + employee.getName());
        System.out.println("Hire Date: " + employee.getHireDate());
        System.out.println("Annual Leave Balance: " + employee.getAnnualLeaveBalance());

        employee.applyLeave(5);
        System.out.println("Current Leave Balance: " + employee.calculateLeaveBalance());

        employee.applyLeave(8); // Trying to apply more leave than available
        System.out.println("Current Leave Balance: " + employee.calculateLeaveBalance());
    }
}










(UPDATE AND DELETE CODE)

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Employee {
	private String employeeNo;
    private String name;
    private String jobTitle;
    private String phoneNo;
    private String birthday;
    private String address;
    private String riceSubsidy;
    private String phoneAllowance;
    private String clothingAllowance;


 //Update and Delete

    public Employee(String employeeNo, String name, String jobTitle, String phoneNO, String birthday,
    String address, String riceSubsidy2, String phoneAllowance2, String clothingAllowance2 ) {
        this.employeeNo        = employeeNo;
        this.name              = name;
        this.jobTitle          = jobTitle;
        this.phoneNo           = phoneNO;
        this.birthday          = birthday;
        this.address           = address;
        this.riceSubsidy       = riceSubsidy2;
        this.phoneAllowance    = phoneAllowance2;
        this.clothingAllowance = clothingAllowance2;


    }


    public String getemployeeNo() {
        return employeeNo;
    }


    public String getName() {
        return name;
    }


    public String getjobTitle() {
        return jobTitle;
    }
    public String getphoneNo() {
        return phoneNo;
    }


    public String getbirthday() {
        return birthday;
    }
       
    public String getaddress() {
        return address;
    }
    public String getriceSubsidy() {
            return riceSubsidy;
    }
    public String getphoneAllowance() {
        return phoneAllowance;
    }
    public String getclothingAllowance() {
        return clothingAllowance;
    }
   


    public void setName(String name) {
        this.name = name;
    }


    public void setDesignation(String jobTitle) {
        this.jobTitle = jobTitle;
    }


    @Override
    public String toString() {
        return "Employee{" +
                "employeeNO ='" + employeeNo + '\'' +
                ", name='" + name + '\'' +
                ", jobTitle ='" + jobTitle + '\'' +
                ", phoneNo ='" + phoneNo + '\'' +
                ", birthday ='" + birthday + '\'' +
                ", address ='" + address + '\'' +
                ", riceSubsidy ='" + riceSubsidy + '\'' +
                ", phoneAllowance ='" + phoneAllowance + '\'' +
                ", clothingAllowance ='" + clothingAllowance + '\'' +
                '}';
    }
}


public class EmployeeUpdateAndDelete {
    private static List<Employee> employees = new ArrayList<>();
    private static Scanner scanner = new Scanner(System.in);


    public static void main(String[] args) {
        boolean exit = false;


        while (!exit) {
            System.out.println("1. Add employee");
            System.out.println("2. Update employee");
            System.out.println("3. Delete employee");
            System.out.println("4. Print all employees");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline character


            switch (choice) {
                case 1:
                    addEmployee();
                    break;
                case 2:
                    updateEmployee();
                    break;
                case 3:
                    deleteEmployee();
                    break;
                case 4:
                    printEmployees();
                    break;
                case 5:
                    exit = true;
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }


            System.out.println();
        }
    }


    private static void addEmployee() {
        System.out.print("Enter Employee No: ");
        String employeeNo = scanner.nextLine();


        System.out.print("Enter Employee Name: ");
        String name = scanner.nextLine();


        System.out.print("Enter Employee Job Title: ");
        String jobTitle = scanner.nextLine();


        System.out.print("Enter Employee Phone no: ");
        String phoneNo = scanner.nextLine();


        System.out.print("Enter Employee Birthday: ");
        String birthday = scanner.nextLine();


        System.out.print("Enter Employee Address: ");
        String address = scanner.nextLine();


        System.out.print("Enter Rice Subsidy: ");
        String riceSubsidy = scanner.nextLine();


        System.out.print("Enter Phone Allowance: ");
        String phoneAllowance = scanner.nextLine();


        System.out.print("Enter Clothing Allowance: ");
        String clothingAllowance = scanner.nextLine();


       
        Employee employee = new Employee ( employeeNo,  name, jobTitle, phoneNo, birthday, address, riceSubsidy, phoneAllowance, clothingAllowance );
        employees.add(employee);
        System.out.println("Employee added successfully.");
    }


    /**
     *
     */
    private static void updateEmployee() {
        System.out.print("Enter Employee No to update: ");
        String employeeNo = scanner.nextLine();
        Employee employee = findEmployeeById(employeeNo);


        if (employeeNo != null) {
            System.out.print("Enter new Name for the employee: ");
            String name = scanner.nextLine();
            System.out.print("Enter new Job Title for the employee: ");
            String jobTitle = scanner.nextLine();
            System.out.print("Enter new Phone Number for the employee: ");
            String phoneNo = scanner.nextLine();
            System.out.print("Enter new Birthday for the employee: ");
            String birthday = scanner.nextLine();
            System.out.print("Enter new Address for the employee: ");
            String address = scanner.nextLine();
            System.out.print("Enter new Rice Subsidy for the employee: ");
            String riceSubsidy = scanner.nextLine();
            System.out.print("Enter new Phone Allowance for the employee: ");
            String phoneAllowance = scanner.nextLine();
            System.out.print("Enter new Clothing Allowance for the employee: ");
            String clothingAllowance = scanner.nextLine();


            employee.setName(name);
            employee.setDesignation(jobTitle);
            employee.setDesignation(phoneNo);
            employee.setDesignation(birthday);
            employee.setDesignation(address);
            employee.setDesignation(riceSubsidy);
            employee.setDesignation(phoneAllowance);
            employee.setDesignation(clothingAllowance);


            System.out.println("Employee Updated Successfully.");
        } else {
            System.out.println("Employee not found with Employee No: " + employeeNo);
        }
    }


    private static void deleteEmployee() {
        System.out.print("Enter Employee No to Delete: ");
        String employeeNo = scanner.nextLine();
        Employee employee = findEmployeeById(employeeNo);


        if (employee != null) {
            employees.remove(employee);
            System.out.println("Employee deleted successfully.");
        } else {
            System.out.println("Employee not found with ID: " + employeeNo);
        }
    }


    private static void printEmployees() {
        System.out.println("Employee List:");
        for (Employee employee : employees) {
            System.out.println(employee);
        }
    }


    private static Employee findEmployeeById(String employeeNo) {
        for (Employee employee : employees) {
            if (employee.getemployeeNo().equals(employeeNo)) {
                return employee;
            }
        }
        return null;
    }
}


}

